name: Azure Function App Dev Deployment

on:
  push:
    branches:
      - development
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './src/Functions'
  OUTPUT_PATH: './output'
  DOTNET_VERSION: '8.0.x'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      url: https://az-tw-website-dev.azurewebsites.net

    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4

    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Build and Publish Functions'
      shell: bash
      env:
        FUNCTIONS_WORKER_RUNTIME: "dotnet-isolated"
      run: |
        # First restore solution dependencies
        dotnet restore
        
        # Build shared project
        dotnet build src/Shared/AzTwWebsiteApi.Shared.csproj --configuration Release
        
        # Create output directory
        mkdir -p ./output
        
        # Build and publish each function project
        for func in ./src/Functions/*; do
          if [ -f "$func"/*.csproj ]; then
            echo "Publishing function: $func"
            dotnet publish "$func" \
              --configuration Release \
              --output ./output \
              --runtime linux-x64 \
              --no-self-contained \
              -p:FunctionWorkerRuntime=dotnet-isolated
          fi
        done
        
        # Copy host.json to output
        cp src/Functions/Blog/host.json ./output/

    - name: 'Deploy to Azure Function App'
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ vars.AZURE_FUNCTIONAPP_NAME_DEV }}
        package: ${{ env.OUTPUT_PATH }}
        scm-do-build-during-deployment: false
        enable-oryx-build: false

    - name: 'Verify Deployment'
      shell: bash
      run: |
        echo "Checking Function App status..."
        az functionapp list \
          --resource-group ${{ vars.RESOURCE_GROUP_FUNCTIONS_NAME }} \
          --query "[?name=='${{ vars.AZURE_FUNCTIONAPP_NAME_DEV }}'].{State:state,Status:status}" \
          --output table