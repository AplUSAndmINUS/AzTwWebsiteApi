name: Azure Function App Dev Deployment

on:
  push:
    branches:
      - development
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './src/Functions'
  OUTPUT_PATH: './output'
  DOTNET_VERSION: '8.0.x'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: development

    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4

    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Build and Publish Functions'
      shell: bash
      env:
        FUNCTIONS_WORKER_RUNTIME: "dotnet-isolated"
        DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: 1
      run: |
        # Clean and create output directory
        rm -rf ./output || true
        mkdir -p ./output
        
        # Restore and build solution
        dotnet restore
        dotnet build --configuration Release
        
        # Publish functions
        for func in ./src/Functions/*; do
          if [ -f "$func"/*.csproj ]; then
            echo "üì¶ Publishing function: $func"
            dotnet publish "$func" \
              --configuration Release \
              --output ./output \
              --runtime linux-x64 \
              --no-self-contained \
              -p:FunctionWorkerRuntime=dotnet-isolated
          fi
        done
        
        # Verify output
        echo "üîç Verifying deployment package..."
        if [ -f "./output/host.json" ]; then
          echo "‚úÖ host.json found"
        else
          echo "üìù Copying host.json..."
          cp src/Functions/Blog/host.json ./output/
        fi

    - name: 'Deploy to Azure Function App'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ vars.AZURE_FUNCTIONAPP_NAME_DEV }}
        package: ${{ env.OUTPUT_PATH }}
        scm-do-build-during-deployment: false
        enable-oryx-build: false

    - name: 'Verify Deployment'
      if: success()
      shell: bash
      run: |
        echo "‚è≥ Waiting for deployment to stabilize..."
        sleep 30
        
        echo "üîç Checking Function App status..."
        az functionapp show \
          --name ${{ vars.AZURE_FUNCTIONAPP_NAME_DEV }} \
          --resource-group ${{ vars.RESOURCE_GROUP_FUNCTIONS_NAME }} \
          --query "{State:state,Status:status}" \
          --output table

    - name: 'Report Deployment Status'
      if: always()
      shell: bash
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "‚úÖ Deployment completed successfully"
        else
          echo "‚ùå Deployment failed"
          exit 1
        fi