name: Azure Function App Test Deployment

on:
  push:
    branches:
      - test
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './src/Functions'
  OUTPUT_PATH: './output'
  DOTNET_VERSION: '8.0.x'
  AZURE_FUNCTIONAPP_NAME_TST: 'az-tw-website-ts-func'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: test

    steps:
    - name: 'Checkout Code'
      uses: actions/checkout@v4

    - name: 'Setup .NET'
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: 'Run Unit Tests'
      shell: bash
      run: |
        dotnet test

    - name: 'Build and Publish Functions'
      shell: bash
      run: |
        # Clean output directory
        rm -rf ${{ env.OUTPUT_PATH }}
        mkdir -p ${{ env.OUTPUT_PATH }}
        
        # Build the function project first
        dotnet build ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/AzTwWebsiteApi.Functions.csproj \
          --configuration Release \
          -p:GenerateFunctionMetadata=true \
          -p:_FunctionsSkipCleanOutput=true

        # Then publish the project with explicit function generation
        dotnet publish ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/AzTwWebsiteApi.Functions.csproj \
          --configuration Release \
          --output ${{ env.OUTPUT_PATH }} \
          --runtime linux-x64 \
          --self-contained false \
          -p:PublishReadyToRun=false \
          -p:GenerateRuntimeConfigurationFiles=true \
          -p:UseAppHost=false \
          -p:GenerateFunctionMetadata=true \
          -p:_FunctionsSkipCleanOutput=true

        # Create deployment package
        cd ${{ env.OUTPUT_PATH }}
        zip -r ../function-app.zip ./*
        cd ..

    - name: 'Login to Azure'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Update Function App Settings'
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az functionapp config appsettings set --name ${{ env.AZURE_FUNCTIONAPP_NAME_TST }} \
            --resource-group ${{ vars.RESOURCE_GROUP_FUNCTIONS_NAME }} \
            --settings \
              AzureWebJobsStorage="${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}" \
              StorageAccountName="aztwwebsitestorage" \
              BlogPostsTableName="mockblog" \
              BlogCommentsTableName="mockblogcomments" \
              BlogImagesContainerName="mock-blog-images"

    - name: 'Deploy to Azure Function App'
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME_TST }}
        package: './function-app.zip'
        respect-funcignore: true
        scm-do-build-during-deployment: false
        enable-oryx-build: false

    - name: 'Verify Function App Deployment'
      uses: azure/CLI@v1
      with:
        inlineScript: |
          echo "==== Checking deployed Azure Function App ===="
          echo "Function App status:"
          az functionapp show --name ${{ env.AZURE_FUNCTIONAPP_NAME_TST }} \
            --resource-group ${{ vars.RESOURCE_GROUP_FUNCTIONS_NAME }} \
            --query "{State:state, DefaultHostName:defaultHostName, Runtime:siteConfig.linuxFxVersion}"
          
          echo "==== Functions list ===="
          az functionapp function list --name ${{ env.AZURE_FUNCTIONAPP_NAME_TST }} \
            --resource-group ${{ vars.RESOURCE_GROUP_FUNCTIONS_NAME }} \
            --output table